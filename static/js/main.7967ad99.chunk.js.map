{"version":3,"sources":["assets/images/banner.jpg","assets/images/sorry.gif","assets/images/back.gif","components/Header/Header.js","services/ReadableAPI.js","store/actions/posts.js","components/PostItem/PostItem.js","components/PostList/PostList.js","store/actions/user.js","components/User/User.js","store/actions/categories.js","components/Categories/Categories.js","screens/Home/Home.js","screens/Category/Category.js","store/actions/post.js","store/actions/comments.js","components/CommentBox/CommentBox.js","screens/Post/Post.js","components/PostForm/PostForm.js","screens/StorePost/StorePost.js","store/reducers/categories.js","store/reducers/posts.js","store/reducers/post.js","store/reducers/comments.js","store/reducers/index.js","store/reducers/user.js","store/middlewares/logger.js","store/middlewares/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","banner","alt","Link","to","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Content-Type","Authorization","getPosts","fetch","concat","then","res","json","data","catch","error","console","log","getPostsByCategory","categoryName","getPost","postId","increaseVotes","method","body","JSON","stringify","option","decreaseVotes","getCategories","categories","addPost","postData","editPost","id","getPostComments","addComment","commentData","increaseCommentVotes","commentId","decreaseCommentVotes","LIST_POSTS","INCREASE_VOTES","DECREASE_VOTES","getPostsAction","posts","sortType","sortOrder","searchTerm","type","handleGetPosts","category","arguments","length","undefined","dispatch","handleIncreaseVotes","post","increaseVotesAction","handleDecreaseVotes","decreaseVotesAction","PostItem","this","props","history","push","_this","_this$props$post","title","author","commentCount","timestamp","voteScore","reactstrap_es","href","color","fa","moment","format","onClick","size","goToContent","withRouter","connect","PostList","state","search","loadPostList","prevProps","_this$state","setState","_this$state2","_this$state3","event","_this$state4","target","value","_this$state5","_this2","_this$state6","outline","sortPostsByDate","active","sortPostsByVotes","toggleSortOrder","placeholder","onChange","handleSearchChange","bind","loading","list","sorryImage","map","components_PostItem_PostItem","key","_ref","SET_USER","handleSetUser","user","setUserAction","User","modalOpened","name","toggleModal","handleChange","saveUserData","setItem","getItem","parse","defaultUser","isOpen","toggle","for","e","LIST_CATEGORIES","handleGetCategories","getCategoriesAction","Categories","route","preventDefault","_this$props","selected","tag","path","toUpperCase","Home","components_Header_Header","listTag","components_PostList_PostList","components_User_User","components_Categories_Categories","block","goToNewPost","Category","validCategory","categoryTitle","charAt","slice","backImage","match","params","pathname","location","filter","GET_POST","EDIT_POST","ADD_POST","INCREASE_VOTE","DECREASE_VOTE","handleGetPost","getPostAction","handleAddPost","addPostAction","handleEditPost","editPostAction","handleIncreaseVote","increaseVoteAction","handleDecreaseVote","decreaseVoteAction","GET_POST_COMMENTS","INCREASE_COMMENT_VOTES","DECREASE_COMMENT_VOTES","ADD_COMMENT","handleGetPostComments","comments","getPostCommentsAction","handleIncreaseCommentVotes","comment","increaseCommentVotesAction","handleDecreaseCommentVotes","decreaseCommentVotesAction","handleAddComment","addCommentAction","CommentBox","handleInputChange","field","Object","defineProperty","onFormSubmit","Date","now","parentId","onSubmit","maxLength","required","rows","aria-multiline","check","Post","goToRoute","components_CommentBox_CommentBox","goToHome","PostForm","content","inline","StorePost","pageTitle","keys","components_PostForm_PostForm","initialState","combineReducers","action","sort","p1","p2","includes","i","toConsumableArray","logger","store","next","group","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducers","middlewares","ReactDOM","render","es","BrowserRouter","basename","process","Switch","Route","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.7967ad99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.56eac4d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sorry.f7def4e0.gif\";","module.exports = __webpack_public_path__ + \"static/media/back.21e770cf.gif\";","// Basic\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Assets\r\nimport banner from '../../assets/images/banner.jpg';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <img src={banner} alt=\"Banner\" />\r\n        <div className=\"container\">\r\n          <div className=\"text-box\">\r\n            <h1><Link to={'/'}>TechnoBlog</Link></h1>\r\n            <p>What's up ?</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","const api = 'http://localhost:3001';\n\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n  'Authorization': token,\n};\n\nexport const getPosts = () =>\n  fetch(`${api}/posts`, { headers })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\nexport const getPostsByCategory = (categoryName) =>\n  fetch(`${api}/${categoryName}/posts`, { headers })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\nexport const getPost = (postId) =>\n  fetch(`${api}/posts/${postId}`, { headers })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\n\nexport const increaseVotes = (postId) =>\n  fetch(`${api}/posts/${postId}`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({ option: 'upVote' })\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\nexport const decreaseVotes = (postId) =>\n  fetch(`${api}/posts/${postId}`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({ option: 'downVote' })\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\n\nexport const getCategories = () =>\n  fetch(`${api}/categories`, { headers })\n    .then(res => res.json())\n    .then(data => data.categories)\n    .catch(error => console.log(error))\n\n\nexport const addPost = (postData) =>\n  fetch(`${api}/posts`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\nexport const editPost = (postData) =>\n  fetch(`${api}/posts/${postData.id}`, {\n    headers,\n    method: 'PUT',\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\nexport const getPostComments = (postId) =>\n  fetch(`${api}/posts/${postId}/comments`, { headers })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\nexport const addComment = (commentData) =>\n  fetch(`${api}/comments`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify(commentData)\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\n\nexport const increaseCommentVotes = (commentId) =>\n  fetch(`${api}/comments/${commentId}`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({ option: 'upVote' })\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))\n\nexport const decreaseCommentVotes = (commentId) =>\n  fetch(`${api}/comments/${commentId}`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({ option: 'downVote' })\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => console.log(error))","import { getPosts, getPostsByCategory, decreaseVotes, increaseVotes, getPost } from '../../services/ReadableAPI';\r\nexport const LIST_POSTS = 'LIST_POSTS';\r\nexport const INCREASE_VOTES = 'INCREASE_VOTES';\r\nexport const DECREASE_VOTES = 'DECREASE_VOTES';\r\nexport const GET_POST = 'GET_POST';\r\n\r\nfunction getPostsAction(posts, sortType, sortOrder, searchTerm) {\r\n  return {\r\n    type: LIST_POSTS,\r\n    posts,\r\n    sortType,\r\n    sortOrder,\r\n    searchTerm\r\n  };\r\n}\r\nexport function handleGetPosts(sortType, sortOrder, searchTerm, category = null) {\r\n  return dispatch => {\r\n    if (category === null || category === '') {\r\n      return getPosts().then(posts => {\r\n        dispatch(getPostsAction(posts, sortType, sortOrder, searchTerm));\r\n      })\r\n    } else {\r\n      return getPostsByCategory(category).then(posts => {\r\n        dispatch(getPostsAction(posts, sortType, sortOrder, searchTerm));\r\n      });\r\n    }\r\n  };\r\n}\r\n//\r\nfunction increaseVotesAction(post) {\r\n  return {\r\n    type: INCREASE_VOTES,\r\n    post,\r\n  };\r\n}\r\nexport function handleIncreaseVotes(post) {\r\n  return dispatch => {\r\n    return increaseVotes(post.id).then(post => {\r\n      dispatch(increaseVotesAction(post));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction decreaseVotesAction(post) {\r\n  return {\r\n    type: DECREASE_VOTES,\r\n    post,\r\n  };\r\n}\r\nexport function handleDecreaseVotes(post) {\r\n  return dispatch => {\r\n    return decreaseVotes(post.id).then(post => {\r\n      dispatch(decreaseVotesAction(post));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction getPostAction(post) {\r\n  return {\r\n    type: GET_POST,\r\n    post,\r\n  };\r\n}\r\nexport function handleGetPost(postId) {\r\n  return dispatch => {\r\n    return getPost(postId).then(post => {\r\n      dispatch(getPostAction(post));\r\n    });\r\n  };\r\n}","// Basic\r\nimport React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\n\r\n// Styles\r\nimport './PostItem.css';\r\n\r\n// Icons\r\nimport { FaRegUserCircle, FaRegThumbsDown, FaRegThumbsUp, FaRegComments } from 'react-icons/fa';\r\n\r\n// UI\r\nimport {\r\n  Card, CardBody, CardTitle, CardFooter,\r\n  Badge,\r\n  Button\r\n} from 'reactstrap';\r\n\r\n// Store\r\nimport { handleIncreaseVotes, handleDecreaseVotes } from '../../store/actions/posts';\r\n\r\nclass PostItem extends Component {\r\n  goToContent(category, id) {\r\n    this.props.history.push(`/${category}/${id}`);\r\n  }\r\n\r\n  increaseVotes(post) {\r\n    this.props.dispatch(handleIncreaseVotes(post));\r\n  }\r\n\r\n  decreaseVotes(post) {\r\n    this.props.dispatch(handleDecreaseVotes(post));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      author,\r\n      body,\r\n      category,\r\n      commentCount,\r\n      timestamp,\r\n      voteScore,\r\n      id,\r\n    } = this.props.post;\r\n\r\n    return (\r\n      <Card className=\"post-item\">\r\n        <CardBody>\r\n          <CardTitle><Link to={`/${category}/${id}`}>{title}</Link> - <Badge href=\"#\" color=\"light\">{category}</Badge></CardTitle>\r\n          <div className=\"toolbar\">\r\n            <div className=\"publish-info\">\r\n              <FaRegUserCircle />&nbsp;\r\n                {author}&nbsp;|&nbsp;{moment(timestamp).format('ddd, MMMM Do YYYY')}\r\n            </div>\r\n\r\n            <div className=\"comment-count\">\r\n              <FaRegComments />&nbsp;&nbsp;{commentCount}\r\n            </div>\r\n          </div>\r\n          {body}<br />\r\n        </CardBody>\r\n        <CardFooter className=\"footer\">\r\n          <div className=\"vote-score-container\">\r\n            <span onClick={() => this.decreaseVotes(this.props.post)}><FaRegThumbsDown /></span>\r\n            &nbsp;{voteScore}&nbsp;\r\n            <span onClick={() => this.increaseVotes(this.props.post)}><FaRegThumbsUp /></span>\r\n          </div>\r\n          <Button size=\"sm\" color=\"primary\" onClick={() => this.goToContent(category, id)}>Read more</Button>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect()(PostItem));","// Basic\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\n// Components\r\nimport PostItem from '../../components/PostItem/PostItem';\r\n\r\n// Store\r\nimport { handleGetPosts } from '../../store/actions/posts';\r\n\r\n// UI\r\nimport { ButtonGroup, Button, InputGroup, Input } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaSortAmountDown, FaSortAmountUp } from 'react-icons/fa';\r\n\r\n// Assets\r\nimport sorryImage from '../../assets/images/sorry.gif';\r\nimport './Postlist.css';\r\n\r\nclass PostList extends Component {\r\n  // @properties\r\n  static propTypes = {\r\n    category: PropTypes.string\r\n  }\r\n\r\n  // @states\r\n  state = {\r\n    sortType: 'DATE',\r\n    sortOrder: 'DESC',\r\n    search: ''\r\n  };\r\n\r\n  // @lifecycle\r\n  componentDidMount() {\r\n    this.loadPostList();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.category !== prevProps.category) {\r\n      this.loadPostList();\r\n    }\r\n  }\r\n\r\n  // @methods\r\n  sortPostsByDate() {\r\n    const { sortOrder, search } = this.state;\r\n    const { category } = this.props;\r\n    this.setState({\r\n      sortType: 'DATE'\r\n    });\r\n    this.props.dispatch(handleGetPosts('DATE', sortOrder, search, category));\r\n  }\r\n  sortPostsByVotes() {\r\n    const { sortOrder, search } = this.state;\r\n    const { category } = this.props;\r\n    this.setState({\r\n      sortType: 'VOTES'\r\n    });\r\n    this.props.dispatch(handleGetPosts('VOTES', sortOrder, search, category));\r\n  }\r\n  toggleSortOrder() {\r\n    const { sortType, search } = this.state;\r\n    const { category } = this.props;\r\n    const sortOrder = this.state.sortOrder === 'ASC' ? 'DESC' : 'ASC';\r\n    this.setState({\r\n      sortOrder\r\n    });\r\n    this.props.dispatch(handleGetPosts(sortType, sortOrder, search, category));\r\n  }\r\n  handleSearchChange(event) {\r\n    const { sortType, sortOrder } = this.state;\r\n    const { category } = this.props;\r\n    const search = event.target.value;\r\n    this.setState({\r\n      search\r\n    });\r\n    this.props.dispatch(handleGetPosts(sortType, sortOrder, search, category));\r\n  }\r\n  loadPostList() {\r\n    const { sortType, sortOrder, search } = this.state;\r\n    const { category } = this.props;\r\n    this.props.dispatch(handleGetPosts(sortType, sortOrder, search, category));\r\n  }\r\n\r\n  render() {\r\n    const { sortType, sortOrder, search } = this.state;\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <div className=\"post-list\">\r\n        <div className=\"toolbar\">\r\n          <div>\r\n            Sort by&nbsp;\r\n            <ButtonGroup size=\"sm\">\r\n              <Button outline color=\"primary\" onClick={() => this.sortPostsByDate()} active={sortType === 'DATE'}>Date</Button>\r\n              <Button outline color=\"primary\" onClick={() => this.sortPostsByVotes()} active={sortType === 'VOTES'}>Votes</Button>\r\n            </ButtonGroup>&nbsp;\r\n            {(sortOrder === 'DESC') && <FaSortAmountDown className=\"sort-icon sort-down\" onClick={() => this.toggleSortOrder()} />}\r\n            {(sortOrder === 'ASC') && <FaSortAmountUp className=\"sort-icon sort-up\" onClick={() => this.toggleSortOrder()} />}\r\n          </div>\r\n          <div>\r\n            <InputGroup size=\"sm\">\r\n              <Input placeholder=\"Search...\" value={search} onChange={this.handleSearchChange.bind(this)} />\r\n            </InputGroup>\r\n          </div>\r\n        </div >\r\n        <br />\r\n        {posts.loading === true && (\r\n          <div>Waiting...</div>\r\n        )}\r\n        {(posts.loading === false && posts.list.length === 0) && (\r\n          <div>\r\n            Sorry. No posts in this category yet<br /><br />\r\n            <img src={sorryImage} alt=\"Sorry\" />\r\n          </div>\r\n        )}\r\n        {posts.loading === false && posts.list.map(post => (\r\n          <PostItem post={post} key={post.id} />\r\n        ))}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ posts }, props) {\r\n  return {\r\n    posts,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(PostList);","export const SET_USER = 'SET_USER';\r\n\r\nfunction setUserAction(user) {\r\n    return {\r\n        type: SET_USER,\r\n        user,\r\n    };\r\n}\r\nexport function handleSetUser(user) {\r\n    return dispatch => {\r\n        return dispatch(setUserAction(user));\r\n    };\r\n}","// Basic\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// UI\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaRegUser, FaPencilAlt, FaSave, FaTimes } from 'react-icons/fa';\r\n\r\n// Styles\r\nimport './User.css';\r\n\r\n// Store\r\nimport { handleSetUser } from '../../store/actions/user';\r\n\r\nclass User extends Component {\r\n  state = {\r\n    modalOpened: false,\r\n    name: ''\r\n  }\r\n\r\n  // @hook\r\n  componentWillMount() {\r\n    // Get user\r\n    let user = localStorage.getItem('user') || null;\r\n    user = JSON.parse(user)\r\n\r\n    if (user === null) {\r\n      // Define initial user\r\n      const defaultUser = {\r\n        'id': Math.random().toString(36).substr(-8),\r\n        'name': 'Udacity Student'\r\n      }\r\n\r\n      // Save user on local Storage\r\n      localStorage.setItem('user', JSON.stringify(defaultUser))\r\n\r\n      // Set initial user\r\n      user = defaultUser;\r\n    }\r\n\r\n    // Set user\r\n    this.props.dispatch(handleSetUser(user));\r\n\r\n    // Update input\r\n    this.handleChange(user.name);\r\n  }\r\n\r\n  // @methods\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalOpened: !this.state.modalOpened\r\n    });\r\n  }\r\n\r\n  handleChange = (name) => {\r\n    this.setState({\r\n      name\r\n    })\r\n  }\r\n\r\n  saveUserData = () => {\r\n    // Prepare data\r\n    const user = {\r\n      'id': this.props.user.id,\r\n      'name': this.state.name\r\n    }\r\n\r\n    // Save on redux store\r\n    this.props.dispatch(handleSetUser(user));\r\n\r\n    // Save user on local Storage\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n    // Close modal\r\n    this.toggleModal();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n\r\n    return (\r\n      <div className=\"user-interface\">\r\n        <FaRegUser /> Hi, {user.name} <span className=\"edit-user\" onClick={this.toggleModal}><FaPencilAlt /></span>\r\n        <hr />\r\n        <Modal isOpen={this.state.modalOpened} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>User data</ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"username\">Name</Label>\r\n                <Input type=\"text\" name=\"username\" id=\"username\" onChange={e => this.handleChange(e.target.value)} value={this.state.name} />\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"default\" onClick={this.toggleModal}><FaTimes /> Cancel</Button>\r\n            <Button color=\"success\" onClick={this.saveUserData}><FaSave /> Save</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ user }, props) {\r\n  return {\r\n    user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(User);","import { getCategories } from '../../services/ReadableAPI';\r\n\r\nexport const LIST_CATEGORIES = 'LIST_CATEGORIES';\r\n\r\nfunction getCategoriesAction(categories) {\r\n  return {\r\n    type: LIST_CATEGORIES,\r\n    categories\r\n  };\r\n}\r\nexport function handleGetCategories() {\r\n  return dispatch => {\r\n    return getCategories().then(categories => {\r\n      dispatch(getCategoriesAction(categories));\r\n    });\r\n  };\r\n}","// Basic\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\n// UI\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaCube } from 'react-icons/fa';\r\n\r\n// Store\r\nimport { handleGetCategories } from '../../store/actions/categories';\r\n\r\nclass Categories extends Component {\r\n  // @properties\r\n  static propTypes = {\r\n    selected: PropTypes.string\r\n  }\r\n\r\n  // @lifecycle\r\n  componentDidMount() {\r\n    // Get categories\r\n    this.props.dispatch(handleGetCategories());\r\n  }\r\n\r\n  // @methods\r\n  goToContent(event, route) {\r\n    event.preventDefault();\r\n    this.props.history.push(route);\r\n  }\r\n\r\n  render() {\r\n    const { categories, selected } = this.props\r\n\r\n    return (\r\n      <div className=\"categories\" >\r\n        <FaCube /> Categories < br /> <br />\r\n        <ListGroup>\r\n          <ListGroupItem tag=\"a\" href='/' active={selected === undefined} onClick={(e) => this.goToContent(e, '/')} key=\"all\">ALL</ListGroupItem>\r\n          {categories.list.map(category => (\r\n            <ListGroupItem tag=\"a\" active={selected === category.path} href={'/' + category.path} onClick={(e) => this.goToContent(e, '/' + category.path)} key={category.path}>\r\n              {category.name.toUpperCase()}\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ categories }, props) {\r\n  return {\r\n    categories,\r\n  };\r\n}\r\nexport default withRouter(connect(mapStateToProps)(Categories));\r\n","// Basic\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// UI\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaPlusSquare } from 'react-icons/fa';\r\n\r\n// Components\r\nimport Header from '../../components/Header/Header';\r\nimport PostList from '../../components/PostList/PostList';\r\nimport User from '../../components/User/User';\r\nimport Categories from '../../components/Categories/Categories'\r\n\r\nclass Home extends Component {\r\n  // @methods\r\n  goToNewPost(event) {\r\n    event.preventDefault();\r\n    this.props.history.push('/new-post');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n            <BreadcrumbItem tag=\"a\" href=\"/\">Home</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-8\">\r\n                <PostList />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <User />\r\n                <Categories />\r\n                <hr />\r\n                <Button color=\"warning\" size=\"sm\" block onClick={(e) => this.goToNewPost(e)}><FaPlusSquare /> New Post</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","// Basic\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// UI\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaPlusSquare } from 'react-icons/fa';\r\n\r\n// Assets\r\nimport backImage from '../../assets/images/back.gif';\r\n\r\n// Components\r\nimport Header from '../../components/Header/Header';\r\nimport PostList from '../../components/PostList/PostList';\r\nimport User from '../../components/User/User';\r\nimport Categories from '../../components/Categories/Categories'\r\n\r\nclass Category extends Component {\r\n  // @methods\r\n  goToNewPost(event) {\r\n    event.preventDefault();\r\n    this.props.history.push('/new-post');\r\n  }\r\n\r\n  render() {\r\n    const { category, validCategory } = this.props;\r\n    const categoryTitle = category.name.charAt(0).toUpperCase() + category.name.slice(1);\r\n\r\n    return (\r\n      <div className=\"category\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n            <BreadcrumbItem tag=\"a\" href=\"/\">Home</BreadcrumbItem>\r\n            <BreadcrumbItem active>{categoryTitle}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-8\">\r\n                {validCategory === true ?\r\n                  <PostList category={category.name} /> :\r\n                  <div>\r\n                    Ooops! Invalid category <br /><br />\r\n                    <img src={backImage} alt=\"Back\" />\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <User />\r\n                <Categories selected={category.name} />\r\n                <hr />\r\n                <Button color=\"warning\" size=\"sm\" block onClick={(e) => this.goToNewPost(e)}><FaPlusSquare /> New Post</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ categories }, props) {\r\n  const { categoryName } = props.match.params;\r\n  const { pathname } = props.location;\r\n  let category = { name: '' };\r\n  let validCategory = true;\r\n\r\n  if (categories.loading === false) {\r\n    category = categories.list.filter((e) => e.path === categoryName);\r\n    category = category[0];\r\n    if (category === undefined) {\r\n      category = { name: 'Oh No!' };\r\n      validCategory = false;\r\n    }\r\n  }\r\n\r\n  return {\r\n    categories,\r\n    category,\r\n    pathname,\r\n    validCategory\r\n  };\r\n}\r\nexport default withRouter(connect(mapStateToProps)(Category));\r\n","import { getPost, addPost, editPost, increaseVotes, decreaseVotes } from '../../services/ReadableAPI';\r\nexport const GET_POST = 'GET_POST';\r\nexport const EDIT_POST = 'EDIT_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const INCREASE_VOTE = 'INCREASE_VOTE';\r\nexport const DECREASE_VOTE = 'DECREASE_VOTE';\r\n\r\n//\r\nfunction getPostAction(post) {\r\n  return {\r\n    type: GET_POST,\r\n    post,\r\n  };\r\n}\r\nexport function handleGetPost(postId) {\r\n  return dispatch => {\r\n    return getPost(postId).then(post => {\r\n      dispatch(getPostAction(post));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction addPostAction(data) {\r\n  return {\r\n    type: ADD_POST,\r\n    data,\r\n  };\r\n}\r\nexport function handleAddPost(postData) {\r\n  return dispatch => {\r\n    return addPost(postData).then(data => {\r\n      dispatch(addPostAction(data));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction editPostAction(data) {\r\n  return {\r\n    type: EDIT_POST,\r\n    data,\r\n  };\r\n}\r\nexport function handleEditPost(postData) {\r\n  return dispatch => {\r\n    return editPost(postData).then(data => {\r\n      dispatch(editPostAction(data));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction increaseVoteAction(post) {\r\n  return {\r\n    type: INCREASE_VOTE,\r\n    post,\r\n  };\r\n}\r\nexport function handleIncreaseVote(post) {\r\n  return dispatch => {\r\n    return increaseVotes(post.id).then(post => {\r\n      dispatch(increaseVoteAction(post));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction decreaseVoteAction(post) {\r\n  return {\r\n    type: DECREASE_VOTE,\r\n    post,\r\n  };\r\n}\r\nexport function handleDecreaseVote(post) {\r\n  return dispatch => {\r\n    return decreaseVotes(post.id).then(post => {\r\n      dispatch(decreaseVoteAction(post));\r\n    });\r\n  };\r\n}","import {\r\n  getPostComments,\r\n  increaseCommentVotes,\r\n  decreaseCommentVotes,\r\n  addComment\r\n} from '../../services/ReadableAPI';\r\n\r\nexport const GET_POST_COMMENTS = 'GET_POST_COMMENTS';\r\nexport const INCREASE_COMMENT_VOTES = 'INCREASE_COMMENT_VOTES';\r\nexport const DECREASE_COMMENT_VOTES = 'DECREASE_COMMENT_VOTES';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\n//\r\nfunction getPostCommentsAction(comments) {\r\n  return {\r\n    type: GET_POST_COMMENTS,\r\n    comments,\r\n  };\r\n}\r\nexport function handleGetPostComments(postId) {\r\n  return dispatch => {\r\n    return getPostComments(postId).then(comments => {\r\n      dispatch(getPostCommentsAction(comments));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction increaseCommentVotesAction(comment) {\r\n  return {\r\n    type: INCREASE_COMMENT_VOTES,\r\n    comment,\r\n  };\r\n}\r\nexport function handleIncreaseCommentVotes(comment) {\r\n  return dispatch => {\r\n    return increaseCommentVotes(comment.id).then(comment => {\r\n      dispatch(increaseCommentVotesAction(comment));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction decreaseCommentVotesAction(comment) {\r\n  return {\r\n    type: DECREASE_COMMENT_VOTES,\r\n    comment,\r\n  };\r\n}\r\nexport function handleDecreaseCommentVotes(comment) {\r\n  return dispatch => {\r\n    return decreaseCommentVotes(comment.id).then(comment => {\r\n      dispatch(decreaseCommentVotesAction(comment));\r\n    });\r\n  };\r\n}\r\n//\r\nfunction addCommentAction(comment) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n  };\r\n}\r\nexport function handleAddComment(commentData) {\r\n  return dispatch => {\r\n    return addComment(commentData).then(comment => {\r\n      dispatch(addCommentAction(comment));\r\n    });\r\n  };\r\n}","// Basic\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n// UI\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n\r\n// Icons\r\nimport {\r\n  FaPaperPlane,\r\n  FaUser,\r\n  FaRegComments,\r\n  FaAngleDown, FaAngleUp\r\n} from 'react-icons/fa';\r\n\r\n// Assets\r\nimport './CommentBox.css';\r\n\r\n// Store\r\nimport {\r\n  handleGetPostComments,\r\n  handleIncreaseCommentVotes,\r\n  handleDecreaseCommentVotes,\r\n  handleAddComment\r\n} from '../../store/actions/comments';\r\n\r\nclass CommentBox extends Component {\r\n  // @states\r\n  state = {\r\n    comment: ''\r\n  }\r\n\r\n  // @lifecycle\r\n  componentDidMount() {\r\n    const { postId } = this.props;\r\n    this.props.dispatch(handleGetPostComments(postId));\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const { postId } = this.props;\r\n    if (postId !== prevProps.postId) {\r\n      this.props.dispatch(handleGetPostComments(postId));\r\n    }\r\n  }\r\n\r\n  // @methods\r\n  handleInputChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value\r\n    })\r\n  }\r\n  onFormSubmit = (e) => {\r\n    // Cancel default event\r\n    e.preventDefault();\r\n\r\n    // Prepare user data\r\n    let user = localStorage.getItem('user');\r\n    user = JSON.parse(user);\r\n\r\n    // Prepare comment data\r\n    const commentData = {\r\n      id: Math.random().toString(36).substr(-8),\r\n      timestamp: Date.now(),\r\n      body: this.state.comment,\r\n      author: user.name,\r\n      parentId: this.props.postId\r\n    }\r\n\r\n    // New comment\r\n    this.props.dispatch(handleAddComment(commentData));\r\n\r\n    // Clear comment form\r\n    this.setState({\r\n      comment: ''\r\n    });\r\n  }\r\n  increaseVotes(comment) {\r\n    this.props.dispatch(handleIncreaseCommentVotes(comment));\r\n  }\r\n  decreaseVotes(comment) {\r\n    this.props.dispatch(handleDecreaseCommentVotes(comment));\r\n  }\r\n\r\n  render() {\r\n    const { comments } = this.props;\r\n\r\n    return (\r\n      <div className=\"comment-box\">\r\n        <h3><FaRegComments /> Comments</h3>\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <FormGroup tag=\"fieldset\">\r\n            <FormGroup>\r\n              <Label for=\"postComment\">Post content</Label>\r\n              <Input type='textarea' maxLength='500' required name='postComment' id='postComment' rows={4}\r\n                onChange={e => this.handleInputChange('comment', e.target.value)} aria-multiline='true'\r\n                value={this.state.comment} />\r\n            </FormGroup>\r\n            <FormGroup check className=\"float-right\">\r\n              <Button color=\"success\"><FaPaperPlane /> Comment</Button>\r\n            </FormGroup>\r\n          </FormGroup>\r\n        </Form>\r\n        {comments.loading === false && comments.list.map(comment => (\r\n          <div key={comment.id} className=\"comment\">\r\n            <span className=\"text-muted\"><FaUser /> {comment.author} at {moment(comment.timestamp).format('MMMM Do YYYY')}</span> <br />\r\n            {comment.body}\r\n            <hr />\r\n            <div className=\"vote-score-container\">\r\n              <span onClick={() => this.decreaseVotes(comment)}><FaAngleDown /></span>\r\n              &nbsp;{comment.voteScore}&nbsp;\r\n            <span onClick={() => this.increaseVotes(comment)}><FaAngleUp /></span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ comments }, props) {\r\n  return {\r\n    comments\r\n  };\r\n}\r\nexport default withRouter(connect(mapStateToProps)(CommentBox));","// Basic\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n// UI\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaHome, FaRegUserCircle, FaRegThumbsDown, FaRegThumbsUp, FaRegComments } from 'react-icons/fa';\r\n\r\n// Store\r\nimport { handleGetPost, handleIncreaseVote, handleDecreaseVote } from '../../store/actions/post';\r\n\r\n// Components\r\nimport Header from '../../components/Header/Header';\r\nimport User from '../../components/User/User';\r\nimport Categories from '../../components/Categories/Categories';\r\nimport CommentBox from '../../components/CommentBox/CommentBox';\r\n\r\nclass Post extends Component {\r\n  // @state\r\n  state = {\r\n    postId: null\r\n  }\r\n\r\n  // @lifecycle\r\n  componentWillMount() {\r\n    const postId = this.props.match.params.postId;\r\n    this.props.dispatch(handleGetPost(postId));\r\n  }\r\n\r\n  // @methods\r\n  goToHome(event) {\r\n    event.preventDefault();\r\n    this.props.history.push('/');\r\n  }\r\n  goToRoute(event, route) {\r\n    event.preventDefault();\r\n    this.props.history.push(`/${route}`);\r\n  }\r\n  increaseVotes(post) {\r\n    this.props.dispatch(handleIncreaseVote(post));\r\n  }\r\n  decreaseVotes(post) {\r\n    this.props.dispatch(handleDecreaseVote(post));\r\n  }\r\n\r\n  render() {\r\n    const { post } = this.props;\r\n\r\n    return (\r\n      <div className=\"store-post\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n            <BreadcrumbItem tag=\"a\" href=\"/\">Home</BreadcrumbItem>\r\n            {post.loading === false && (\r\n              <BreadcrumbItem tag=\"a\" href=\"#\" onClick={(e) => this.goToRoute(e, post.data.category)}>{post.data.category.toUpperCase()}</BreadcrumbItem>\r\n            )}\r\n            <BreadcrumbItem active>{post.loading === false && post.data.title}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-8\">\r\n                {post.loading === false && (\r\n                  <div>\r\n                    <h1>{post.data.title}</h1>\r\n                    <div className=\"toolbar\">\r\n                      <div className=\"publish-info\">\r\n                        <FaRegUserCircle />&nbsp;\r\n                        {post.data.author}&nbsp;|&nbsp;{moment(post.data.timestamp).format('ddd, MMMM Do YYYY')}\r\n                      </div>\r\n                      <div className=\"comment-count\">\r\n                        <FaRegComments />&nbsp;&nbsp;{post.data.commentCount}\r\n                      </div>\r\n                    </div><br />\r\n                    <p>{post.data.body}</p>\r\n                    <div className=\"vote-score-container\">\r\n                      <span onClick={() => this.decreaseVotes(post.data)}><FaRegThumbsDown /></span>\r\n                      &nbsp;{post.data.voteScore}&nbsp;\r\n                      <span onClick={() => this.increaseVotes(post.data)}><FaRegThumbsUp /></span>\r\n                    </div>\r\n                    <hr />\r\n                    <CommentBox postId={post.data.id} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <User />\r\n                <Categories selected={this.props.match.params.categoryName} />\r\n                <hr />\r\n                <Button color=\"warning\" size=\"sm\" block onClick={(e) => this.goToHome(e)}><FaHome /> Home</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ categories, post }, props) {\r\n  return {\r\n    categories,\r\n    post\r\n  };\r\n}\r\nexport default withRouter(connect(mapStateToProps)(Post));","// Basic\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// UI\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaSave } from 'react-icons/fa';\r\n\r\n// Store\r\nimport { handleGetPost, handleAddPost, handleEditPost } from '../../store/actions/post';\r\n\r\nclass PostForm extends Component {\r\n  // @states\r\n  state = {\r\n    title: '',\r\n    category: '',\r\n    content: ''\r\n  }\r\n\r\n  // @lifecycle\r\n  componentWillMount() {\r\n    const { postId } = this.props;\r\n    // Load post\r\n    if (postId !== undefined) {\r\n      this.props.dispatch(handleGetPost(postId));\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const { post } = this.props;\r\n    if (post !== prevProps.post) {\r\n      this.setState({\r\n        title: post.data.title,\r\n        content: post.data.body,\r\n        category: post.data.category\r\n      })\r\n    }\r\n  }\r\n\r\n  // @methods\r\n  handleInputChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value\r\n    })\r\n  }\r\n  onFormSubmit = (e) => {\r\n    // Cancel default event\r\n    e.preventDefault();\r\n\r\n    // Get values\r\n    const { title, category, content } = this.state;\r\n    const { postId } = this.props;\r\n    let user = localStorage.getItem('user') || null;\r\n    user = JSON.parse(user)\r\n\r\n    // Edit/Add post\r\n    if (postId !== undefined) {\r\n      const postData = {\r\n        id: postId,\r\n        title,\r\n        body: content,\r\n        category\r\n      }\r\n      this.props.dispatch(handleEditPost(postData));\r\n    } else {\r\n      const postData = {\r\n        id: Math.random().toString(36).substr(-8),\r\n        timestamp: Date.now(),\r\n        title,\r\n        body: content,\r\n        author: user.name,\r\n        category\r\n      }\r\n      this.props.dispatch(handleAddPost(postData));\r\n    }\r\n\r\n    // Go to home\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props;\r\n\r\n    return (\r\n      <div className=\"post-form\">\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <FormGroup tag=\"fieldset\">\r\n            <FormGroup>\r\n              <Label for=\"postTitle\">Title</Label>\r\n              <Input type=\"text\" name=\"postTitle\" id=\"postTitle\" required onChange={e => this.handleInputChange('title', e.target.value)} value={this.state.title} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"postCategory\">Category {this.state.category}</Label>\r\n              <Input type=\"select\" name=\"postCategory\" id=\"postCategory\" required onChange={e => this.handleInputChange('category', e.target.value)} value={this.state.category}>\r\n                {categories.loading === true && (\r\n                  <option value=\"\">Loading...</option>\r\n                )}\r\n                {categories.loading === false && categories.list.map(category => (\r\n                  <option value={category.path} key={category.path}>\r\n                    {category.name.charAt(0).toUpperCase() + category.name.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"postContent\">Post content</Label>\r\n              <Input type='textarea' maxLength='500' required name='postContent' id='postContent' rows={4}\r\n                onChange={e => this.handleInputChange('content', e.target.value)} aria-multiline='true'\r\n                value={this.state.content} />\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Button color=\"success\"><FaSave /> Publish post</Button>\r\n            </FormGroup>\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ categories, post }, props) {\r\n  return {\r\n    categories,\r\n    post\r\n  };\r\n}\r\nexport default withRouter(connect(mapStateToProps)(PostForm));\r\n","// Basic\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// UI\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\n\r\n// Icons\r\nimport { FaHome } from 'react-icons/fa';\r\n\r\n// Components\r\nimport Header from '../../components/Header/Header';\r\nimport PostForm from '../../components/PostForm/PostForm';\r\nimport User from '../../components/User/User';\r\nimport Categories from '../../components/Categories/Categories'\r\n\r\nclass StorePost extends Component {\r\n  // @state\r\n  state = {\r\n    pageTitle: 'New Post',\r\n    postId: null\r\n  }\r\n\r\n  // @lifecycle\r\n  componentWillMount() {\r\n    if (this.props.match.path === '/:categoryName/:postId/edit' && Object.keys(this.props.match.params).length === 2) {\r\n      const postId = this.props.match.params.postId || 0;\r\n\r\n      this.setState({\r\n        postId,\r\n        pageTitle: 'Edit Post'\r\n      });\r\n    }\r\n  }\r\n\r\n  // @methods\r\n  goToHome(event) {\r\n    event.preventDefault();\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { pageTitle, postId } = this.state;\r\n\r\n    return (\r\n      <div className=\"store-post\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n            <BreadcrumbItem tag=\"a\" href=\"/\">Home</BreadcrumbItem>\r\n            <BreadcrumbItem active>{pageTitle}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-8\">\r\n                {postId !== null ? <PostForm postId={postId} /> : <PostForm />}\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <User />\r\n                <Categories />\r\n                <hr />\r\n                <Button color=\"warning\" size=\"sm\" block onClick={(e) => this.goToHome(e)}><FaHome /> Home</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(StorePost);\r\n","import { LIST_CATEGORIES } from '../actions/categories';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  list: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LIST_CATEGORIES:\r\n      return {\r\n        loading: false,\r\n        list: action.categories\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LIST_POSTS, INCREASE_VOTES, DECREASE_VOTES } from '../actions/posts';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  list: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LIST_POSTS:\r\n      switch (action.sortType) {\r\n        case 'DATE':\r\n          return {\r\n            loading: false,\r\n            list: action.posts\r\n              .sort((p1, p2) => action.sortOrder === 'ASC' ? p1.timestamp - p2.timestamp : p2.timestamp - p1.timestamp)\r\n              .filter((e) => e.title.toUpperCase().includes(action.searchTerm.toUpperCase()))\r\n          };\r\n        case 'VOTES':\r\n          return {\r\n            loading: false,\r\n            list: action.posts\r\n              .sort((p1, p2) => action.sortOrder === 'ASC' ? p1.voteScore - p2.voteScore : p2.voteScore - p1.voteScore)\r\n              .filter((e) => e.title.toUpperCase().includes(action.searchTerm.toUpperCase()))\r\n          };\r\n        default: return action.posts;\r\n      }\r\n\r\n    case INCREASE_VOTES:\r\n    case DECREASE_VOTES:\r\n      return {\r\n        loading: false,\r\n        list: state.list.map((e, i) => {\r\n          return e.id === action.post.id ? action.post : e;\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { GET_POST, ADD_POST, EDIT_POST, INCREASE_VOTE, DECREASE_VOTE } from '../actions/post';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  post: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POST:\r\n      return {\r\n        loading: false,\r\n        data: action.post\r\n      }\r\n    case ADD_POST:\r\n      return {\r\n        loading: false,\r\n        data: action.data\r\n      }\r\n    case EDIT_POST:\r\n      return {\r\n        loading: false,\r\n        data: action.data\r\n      }\r\n    case INCREASE_VOTE:\r\n    case DECREASE_VOTE:\r\n      return {\r\n        loading: false,\r\n        data: action.post\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POST_COMMENTS,\r\n  INCREASE_COMMENT_VOTES,\r\n  DECREASE_COMMENT_VOTES,\r\n  ADD_COMMENT\r\n} from '../actions/comments';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  list: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POST_COMMENTS:\r\n      return {\r\n        loading: false,\r\n        list: action.comments\r\n      }\r\n\r\n    case INCREASE_COMMENT_VOTES:\r\n    case DECREASE_COMMENT_VOTES:\r\n      return {\r\n        loading: false,\r\n        list: state.list.map((e, i) => {\r\n          return e.id === action.comment.id ? action.comment : e;\r\n        })\r\n      }\r\n\r\n    case ADD_COMMENT:\r\n      return {\r\n        loading: false,\r\n        list: [\r\n          ...state.list,\r\n          action.comment\r\n        ]\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// Basic\r\nimport { combineReducers } from 'redux';\r\n\r\n// Reducers\r\nimport categories from './categories';\r\nimport posts from './posts';\r\nimport post from './post';\r\nimport user from './user';\r\nimport comments from './comments';\r\n\r\n// Combine and export\r\nexport default combineReducers({\r\n  user,\r\n  categories,\r\n  posts,\r\n  post,\r\n  comments\r\n});","import { SET_USER } from '../actions/user';\r\n\r\nexport default function (state = [], action) {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return action.user;\r\n    default:\r\n      return state;\r\n  }\r\n}","const logger = store => next => action => {\r\n    console.group(action.type);\r\n    console.log('Current action: ', action);\r\n    const returnValue = next(action);\r\n    console.log('New state: ', store.getState());\r\n    console.groupEnd();\r\n    return next(returnValue);\r\n};\r\n\r\nexport default logger;","// Basic\r\nimport thunk from 'redux-thunk';\r\nimport { applyMiddleware } from 'redux';\r\n\r\n// Middleware Logger\r\nimport logger from './logger';\r\n\r\nexport default applyMiddleware(thunk, logger);","// Basic\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n// Theme\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/themes/bootstrap.cerulean.min.css';\r\n\r\n// Styles\r\nimport './index.css';\r\n\r\n// Screens\r\nimport Home from './screens/Home/Home';\r\nimport Category from './screens/Category/Category';\r\nimport Post from './screens/Post/Post';\r\nimport StorePost from './screens/StorePost/StorePost';\r\n\r\n// Prepare store\r\nimport reducers from './store/reducers';\r\nimport middlewares from './store/middlewares';\r\n\r\n// Init Store\r\nconst store = createStore(reducers, middlewares);\r\n\r\n// Render\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path='/' exact={true} component={Home} />\r\n        <Route path=\"/new-post\" component={StorePost} />\r\n        <Route path=\"/:categoryName\" exact={true} component={Category} />\r\n        <Route path=\"/:categoryName/:postId\" exact={true} component={Post} />\r\n        <Route path=\"/:categoryName/:postId/edit\" exact={true} component={StorePost} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}